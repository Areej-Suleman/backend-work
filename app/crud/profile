from sqlalchemy.orm import Session
from typing import Optional
from app.models.profile import Profile
from app.schemas.profile import ProfileCreate, ProfileUpdate, ProfilePreferences

def get_by_user_id(db: Session, user_id: int) -> Optional[Profile]:
    return db.query(Profile).filter(Profile.user_id == user_id).first()

def create(db: Session, profile: ProfileCreate) -> Profile:
    obj = Profile(**profile.dict())
    db.add(obj)
    db.commit()
    db.refresh(obj)
    return obj

def update_user(db: Session, user_id: int, profile_update: ProfileUpdate) -> Optional[Profile]:
    obj = get_by_user_id(db, user_id)
    if not obj:
        return None
    for field, value in profile_update.dict(exclude_unset=True).items():
        setattr(obj, field, value)
    db.commit()
    db.refresh(obj)
    return obj

def update_preferences(db: Session, user_id: int, preferences: ProfilePreferences) -> Optional[Profile]:
    obj = get_by_user_id(db, user_id)
    if not obj:
        return None
    for field, value in preferences.dict(exclude_unset=True).items():
        setattr(obj, field, value)
    db.commit()
    db.refresh(obj)
    return obj

def delete_by_user_id(db: Session, user_id: int) -> bool:
    obj = get_by_user_id(db, user_id)
    if not obj:
        return False
    db.delete(obj)
    db.commit()
    return True
